{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","number","calculation","result","multiState","setMultiState","calculator","num","i","isPrime","temp","a","b","isFibonacci","onChange","event","target","id","calculateHandler","numberHandler","value","test","entered","String","Number","className","type","step","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LA+BA,IAoEeA,EApEsB,WAOnC,MAAoCC,mBAAoB,CACtDC,OAAQ,IACRC,YAAa,UACbC,OAAQ,UAHV,mBAAOC,EAAP,KAAmBC,EAAnB,KAMMC,EAAa,SAACC,EAAaL,GAC/B,MAAoB,YAAhBA,EA1CR,SAAiBK,GACf,GAAIA,GAAO,EACT,OAAO,EACT,GAAY,IAARA,EACF,OAAO,EAET,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAKC,IACvB,OAAID,EAAMC,IAAM,EAoCPC,CAAQF,GA7BrB,SAAqBA,GAKnB,IAJA,IAEIG,EAFAC,EAAY,EACZC,EAAY,EAGTL,GAAO,GACZG,EAAOC,EACPA,GAAKC,EACLA,EAAIF,EACJH,IAEF,OAAOK,EAoBIC,CAAYN,IAIjBO,EAAW,SAACC,GACQ,cAApBA,EAAMC,OAAOC,GACfC,EAAiBH,GAEjBI,EAAcJ,IAIZI,EAAgB,SAACJ,GAErB,GAA2B,KAAvBA,EAAMC,OAAOI,OADN,kBACyBC,KAAKN,EAAMC,OAAOI,OAAQ,CAC5D,IAAME,EAAUP,EAAMC,OAAOI,MAC7Bf,EAAc,CACZJ,OAAQqB,EACRpB,YAAaE,EAAWF,YACxBC,OAAQoB,OAAOjB,EAAWkB,OAAOF,GAAUC,OAAOnB,EAAWF,mBAK7DgB,EAAmB,SAACH,GACxB,IAAMO,EAAUP,EAAMC,OAAOI,MAC7Bf,EAAc,CACZJ,OAAQG,EAAWH,OACnBC,YAAaoB,EACbnB,OAAQoB,OAAOjB,EAAWkB,OAAOpB,EAAWH,QAASsB,OAAOD,QAIhE,OACE,sBAAKG,UAAU,YAAf,UACE,qBAAKA,UAAU,cAAf,SACE,uBAAOR,GAAG,SAASS,KAAK,OAAOC,KAAK,IAAIP,MAAOhB,EAAWH,OAAQa,SAAUA,MAE9E,qBAAKW,UAAU,cAAf,SACE,yBAAQR,GAAG,YAAYG,MAAOhB,EAAWF,YAAaY,SAAUA,EAAhE,UACE,wBAAQM,MAAM,UAAd,qBACA,wBAAQA,MAAM,cAAd,8BAGJ,qBAAKK,UAAU,cAAf,SACE,4BAAIrB,EAAWD,eC/ERyB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d36a8176.chunk.js","sourcesContent":["import { useState, ChangeEvent } from 'react';\nimport './App.css';\n\nfunction isPrime(num: number) {\n  if (num <= 1)\n    return false;\n  if (num === 2)\n    return true;\n  \n  for (let i = 2; i < num; i++) {\n    if (num % i === 0) {\n      return false;\n    }\n    return true;\n  }\n}\n\nfunction isFibonacci(num: number) {\n  let a: number = 1;\n  let b: number = 0;\n  let temp: number;\n\n  while (num >= 0) {\n    temp = a;\n    a += b;\n    b = temp;\n    num--;\n  }\n  return b;\n}\n\nconst App: React.FunctionComponent = () => {\n  interface DataProps {\n    number: string;\n    calculation: string;\n    result: string;\n  }\n\n  const [multiState, setMultiState] = useState<DataProps>({\n    number: \"1\",\n    calculation: \"isPrime\",\n    result: \"false\"\n  });\n\n  const calculator = (num: number, calculation: string) => {\n    if (calculation === \"isPrime\") {\n      return isPrime(num);\n    } else {\n      return isFibonacci(num);\n    }\n  }\n\n  const onChange = (event: ChangeEvent<any>) => {\n    if (event.target.id === \"calculate\") {\n      calculateHandler(event);\n    } else {\n      numberHandler(event);\n    }\n  }\n\n  const numberHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    const re = /^\\+?([1-9]\\d*)$/;\n    if (event.target.value === \"\" || re.test(event.target.value)) {\n      const entered = event.target.value;\n      setMultiState({\n        number: entered,\n        calculation: multiState.calculation,\n        result: String(calculator(Number(entered), String(multiState.calculation)))\n      })\n    }\n  }\n\n  const calculateHandler = (event: ChangeEvent<HTMLSelectElement>) => {\n    const entered = event.target.value;\n    setMultiState({\n      number: multiState.number,\n      calculation: entered,\n      result: String(calculator(Number(multiState.number), String(entered)))\n    })\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"col1 border\">\n        <input id=\"number\" type=\"text\" step=\"1\" value={multiState.number} onChange={onChange} />\n      </div>\n      <div className=\"col2 border\">\n        <select id=\"calculate\" value={multiState.calculation} onChange={onChange}>\n          <option value=\"isPrime\">isPrime</option>\n          <option value=\"isFibanacci\">isFibanacci</option>\n        </select>\n      </div>\n      <div className=\"col3 border\">\n        <p>{multiState.result}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}